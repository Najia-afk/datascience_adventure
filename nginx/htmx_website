server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name datascience-adventure.xyz;

    ssl_certificate /etc/letsencrypt/live/datascience-adventure.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/datascience-adventure.xyz/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # SSL Performance Optimizations
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # CORS headers
    add_header Access-Control-Allow-Origin "https://datascience-adventure.xyz";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "no-referrer";

    # Handle root and other dynamic requests
    location / {
        root /var/www/htmx_website;
        try_files $uri $uri/ @flask;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Proxy requests not handled by static file locations
    location @flask {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Custom 404 error page
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/htmx_website;
    }
}
